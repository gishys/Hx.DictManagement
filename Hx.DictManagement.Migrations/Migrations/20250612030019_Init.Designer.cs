// <auto-generated />
using System;
using Hx.DictManagement.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace Migrations
{
    [DbContext(typeof(DictManagementMigrationDbContext))]
    [Migration("20250612030019_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.PostgreSql)
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hx.DictManagement.Domain.DictItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("CODE");

                    b.Property<string>("CssClass")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("CSS_CLASS");

                    b.Property<Guid>("DictTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("DICT_TYPE_ID");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_DEFAULT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("NAME");

                    b.Property<double>("Order")
                        .HasColumnType("double precision")
                        .HasColumnName("ORDER");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("PARENT_ID");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("STATUS");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("VALUE");

                    b.HasKey("Id");

                    b.HasIndex("DictTypeId")
                        .HasDatabaseName("IX_DICT_ITEMS_DICT_TYPE_ID");

                    b.HasIndex("Order")
                        .HasDatabaseName("IX_DICT_ITEMS_ORDER");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("IX_DICT_ITEMS_PARENT_ID");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_DICT_ITEMS_STATUS");

                    b.HasIndex("DictTypeId", "Code")
                        .IsUnique()
                        .HasDatabaseName("IX_DICT_ITEMS_DICTTYPEID_CODE");

                    b.HasIndex("ParentId", "Order")
                        .HasDatabaseName("IX_DICT_ITEMS_PARENTID_ORDER");

                    b.ToTable("DICT_ITEMS", (string)null);
                });

            modelBuilder.Entity("Hx.DictManagement.Domain.DictType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATIONTIME");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CREATORID");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_STATIC");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LASTMODIFICATIONTIME");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LASTMODIFIERID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("NAME");

                    b.Property<double>("Order")
                        .HasColumnType("double precision")
                        .HasColumnName("ORDER");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_DICT_TYPES_CODE");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_DICT_TYPES_NAME");

                    b.HasIndex("Order")
                        .HasDatabaseName("IX_DICT_TYPES_ORDER");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_DICT_TYPES_STATUS");

                    b.ToTable("DICT_TYPES", (string)null);
                });

            modelBuilder.Entity("Hx.DictManagement.Domain.DictTypeGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID")
                        .HasComment("主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(119)
                        .HasColumnType("character varying(119)")
                        .HasColumnName("CODE")
                        .HasComment("路径枚举");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATIONTIME");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CREATORID");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("DESCRIPTION")
                        .HasComment("描述");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LASTMODIFICATIONTIME");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LASTMODIFIERID");

                    b.Property<double>("Order")
                        .HasColumnType("double precision")
                        .HasColumnName("ORDER")
                        .HasComment("序号");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("PARENT_ID")
                        .HasComment("父Id");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TENANTID")
                        .HasComment("租户Id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("TITLE")
                        .HasComment("标题");

                    b.HasKey("Id")
                        .HasName("PK_APPLICATIONFORM_GROUP");

                    b.HasIndex("ParentId");

                    b.ToTable("DICT_TYPE_GROUPS", (string)null);
                });

            modelBuilder.Entity("Hx.DictManagement.Domain.DictItem", b =>
                {
                    b.HasOne("Hx.DictManagement.Domain.DictType", null)
                        .WithMany("DictItems")
                        .HasForeignKey("DictTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hx.DictManagement.Domain.DictItem", null)
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hx.DictManagement.Domain.DictType", b =>
                {
                    b.HasOne("Hx.DictManagement.Domain.DictTypeGroup", null)
                        .WithMany("Items")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("AF_GROUPS_APPLICATIONFORM_ID");
                });

            modelBuilder.Entity("Hx.DictManagement.Domain.DictTypeGroup", b =>
                {
                    b.HasOne("Hx.DictManagement.Domain.DictTypeGroup", null)
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("AF_GROUPS_PARENT_ID");
                });

            modelBuilder.Entity("Hx.DictManagement.Domain.DictItem", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Hx.DictManagement.Domain.DictType", b =>
                {
                    b.Navigation("DictItems");
                });

            modelBuilder.Entity("Hx.DictManagement.Domain.DictTypeGroup", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
